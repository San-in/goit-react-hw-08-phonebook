{"version":3,"file":"static/js/642.75e13d51.chunk.js","mappings":"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","sources":["common/helpers/handleEmailChange.js","common/helpers/handleNameChange.js","common/helpers/handlePasswordChange.js","common/helpers/handleCancel.js","common/helpers/handleMouseDownPassword.js","common/helpers/handleClickShowPassword.js","common/helpers/onBlur.js","common/helpers/onChange.js","common/helpers/onAddContact.js","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","redux/filter/selectors.js","components/ContactList/ContactList .jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["export const handleEmailChange = ({ target: { value } }, setEmail) => {\n  setEmail(value);\n};\n","export const handleNameChange = ({ target: { value } }, setName) => {\n  setName(value);\n};\n","export const handlePasswordChange = ({ target: { value } }, setPassword) => {\n  setPassword(value);\n};\n","export const handleCancel = arrayOfSetFoos => {\n  arrayOfSetFoos.map(foo => foo(''));\n};\n","export const handleMouseDownPassword = ({ preventDefault }) => preventDefault();\n","export const handleClickShowPassword = setShowPassword =>\n  setShowPassword(show => !show);\n","export const onBlur = ({ target: { value } }) => {\n  return (value = '');\n};\n","import { changeFilter } from 'redux/filter/filterSlice';\n\nexport const onChange = ({ target: { value } }, dispatch) => {\n  dispatch(changeFilter(value));\n};\n","import { toast } from 'react-toastify';\nimport { addContact } from 'redux/contacts/operations';\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nexport const onAddContact = (e, dispatch, contacts) => {\n  e.preventDefault();\n  console.log(e.currentTarget);\n  const { name, number } = e.currentTarget;\n  const isContactExist = contacts.find(\n    contact => contact.name.toLowerCase() === name.value.toLowerCase()\n  );\n  if (isContactExist) {\n    toast.warning(`${name.value} is already in contacts.`);\n  } else {\n    dispatch(\n      addContact({\n        name: name.value,\n        number: number.value,\n      })\n    );\n    dispatch(changeFilter(''));\n  }\n\n  e.currentTarget.reset();\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { onAddContact } from 'common/helpers/onAddContact';\nimport { Box, Button, TextField } from '@mui/material';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  return (\n    <>\n      <Box\n        component=\"form\"\n        sx={{\n          padding: '20px',\n          marginBottom: '20px',\n          border: '2px solid rgba(128, 0, 128, 0.8)',\n          maxWidth: '50vw',\n          display: 'flex',\n          flexDirection: 'column',\n          justufyContent: 'center',\n          alignItems: 'center',\n          borderRadius: '20px',\n          backgroundColor: 'rgba(255, 255, 255, 0.7)',\n\n          '&:hover': {\n            backgroundColor: 'rgba(255, 255, 255, 0.95)',\n            border: '2px solid rgb(128, 0, 128, 1)',\n          },\n          '&:focus': {\n            backgroundColor: 'rgba(255, 255, 255, 0.95)',\n            border: '2px solid rgb(128, 0, 128, 1)',\n          },\n        }}\n        noValidate\n        onSubmit={e => onAddContact(e, dispatch, contacts)}\n      >\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          id=\"name\"\n          color=\"secondary\"\n          required\n          sx={{\n            width: '90%',\n            marginBottom: '20px',\n          }}\n        />\n        <TextField\n          label=\"Phone\"\n          type=\"tel\"\n          id=\"number\"\n          color=\"secondary\"\n          required\n          sx={{\n            width: '90%',\n            marginBottom: '20px',\n          }}\n        />\n        <Button\n          type=\"submit\"\n          color=\"secondary\"\n          sx={{\n            fontWeight: 600,\n            '&:hover': {\n              border: '1px solid rgba(128, 0, 128, 0.8)',\n            },\n          }}\n        >\n          Add Contact\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledContactItem = styled.li`\n  display: flex;\n  gap: 20px;\n  font-size: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const StyledContactBtn = styled.button`\n  display: inline-block;\n  align-self: center;\n  padding: 5px 20px;\n  border-radius: 10px;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {\n  StyledContactItem,\n  StyledContactBtn,\n} from 'components/ContactItem/ContactItem.styled';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactItem = ({ item: { name, phone, id } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <StyledContactItem>\n      <p>\n        {name}: {phone}\n      </p>\n      <StyledContactBtn\n        type=\"button\"\n        onClick={({ target: { id } }) => dispatch(deleteContact(id))}\n        id={id}\n      >\n        Delete\n      </StyledContactBtn>\n    </StyledContactItem>\n  );\n};\n\nContactItem.propTypes = {\n  item: PropTypes.exact({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { selectContacts } from 'redux/contacts/selectors';\n\nexport const selectFilterValue = state => state.filter.value;\n\nexport const selectFilteredList = state => {\n  const filteredValue = selectFilterValue(state);\n  const contacts = selectContacts(state);\n  return filteredValue\n    ? contacts.filter(contact => {\n        return contact.name.toLowerCase().includes(filteredValue.toLowerCase());\n      })\n    : contacts;\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { selectFilteredList } from 'redux/filter/selectors';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredList);\n\n  return (\n    <ul>\n      {filteredContacts.length ? (\n        filteredContacts.map(item => {\n          return <ContactItem item={item} key={item.id} />;\n        })\n      ) : (\n        <div>No matches</div>\n      )}\n    </ul>\n  );\n};\n","import styled from '@emotion/styled';\nexport const FilterLabel = styled.label`\n  font-size: 24px;\n  margin-bottom: 20px;\n`;\n\nexport const FilterInput = styled.input`\n  display: inline-block;\n  padding: 5px 10px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterLabel, FilterInput } from 'components/Filter/Filter.styled';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { onBlur, onChange } from 'common/helpers';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n\n  return (\n    <>\n      <FilterLabel htmlFor=\"find\">Find contacts by name</FilterLabel>\n      <FilterInput\n        type=\"text\"\n        name=\"find\"\n        id=\"find\"\n        value={filterValue}\n        onChange={e => onChange(e, dispatch)}\n        onBlur={onBlur}\n      />\n    </>\n  );\n};\n","import { StyledPacmanLoader } from 'common/styles';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList ';\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIslogIn } from 'redux/auth/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const isLoginIn = useSelector(selectIslogIn);\n\n  useEffect(() => {\n    isLoginIn && dispatch(fetchContacts());\n  }, [dispatch, isLoginIn]);\n  return (\n    <>\n      <h3>Phonebook</h3>\n      <ContactForm />\n      <h3>Contacts</h3>\n      {!isLoading ? (\n        contacts.length > 0 ? (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <p>No contacts</p>\n        )\n      ) : (\n        <StyledPacmanLoader color=\"rgb(128, 0, 128, 0.8)\" size=\"75px\" />\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["handleEmailChange","setEmail","target","value","handleNameChange","setName","handlePasswordChange","setPassword","handleCancel","arrayOfSetFoos","map","foo","handleMouseDownPassword","preventDefault","handleClickShowPassword","setShowPassword","show","onBlur","onChange","dispatch","changeFilter","onAddContact","e","contacts","console","log","currentTarget","name","number","find","contact","toLowerCase","toast","addContact","reset","ContactForm","useDispatch","useSelector","selectContacts","Box","component","sx","padding","marginBottom","border","maxWidth","display","flexDirection","justufyContent","alignItems","borderRadius","backgroundColor","noValidate","onSubmit","TextField","label","type","id","color","required","width","Button","fontWeight","StyledContactItem","styled","StyledContactBtn","ContactItem","item","phone","onClick","deleteContact","selectFilterValue","state","filter","selectFilteredList","filteredValue","includes","ContactList","filteredContacts","length","FilterLabel","FilterInput","Filter","filterValue","htmlFor","isLoading","selectIsLoading","isLoginIn","selectIslogIn","useEffect","fetchContacts","size"],"sourceRoot":""}