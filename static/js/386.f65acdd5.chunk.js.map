{"version":3,"file":"static/js/386.f65acdd5.chunk.js","mappings":"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","sources":["common/helpers/handleEmailChange.js","common/helpers/handleNameChange.js","common/helpers/handlePasswordChange.js","common/helpers/handleCancel.js","common/helpers/onChange.js","common/helpers/onAddContact.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","redux/filter/selectors.js","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.js","../node_modules/@mui/material/ListItemText/ListItemText.js","../node_modules/@mui/material/ListItemIcon/ListItemIcon.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.js","../node_modules/@mui/icons-material/DeleteForever.js"],"sourcesContent":["export const handleEmailChange = ({ target: { value } }, setEmail) => {\n  setEmail(value);\n};\n","export const handleNameChange = ({ target: { value } }, setName) => {\n  setName(value);\n};\n","export const handlePasswordChange = ({ target: { value } }, setPassword) => {\n  setPassword(value);\n};\n","export const handleCancel = arrayOfSetFoos => {\n  arrayOfSetFoos.map(foo => foo(''));\n};\n","import { changeFilter } from 'redux/filter/filterSlice';\n\nexport const onChange = (e, dispatch) => {\n  if (e === '') {\n    dispatch(changeFilter(''));\n    return;\n  }\n  dispatch(changeFilter(e.target.value));\n};\n","import { toast } from 'react-toastify';\nimport { addContact } from 'redux/contacts/operations';\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nexport const onAddContact = (e, dispatch, contacts) => {\n  e.preventDefault();\n  const { name, number } = e.currentTarget;\n  const isContactExist = contacts.find(\n    contact => contact.name.toLowerCase() === name.value.toLowerCase()\n  );\n  if (isContactExist) {\n    toast.warning(`${name.value} is already in contacts.`);\n  } else if (name.value.length > 12 || number.value.lenght > 12) {\n    toast.warning('Name and Phone number should be shorter than 12 symbols');\n  } else {\n    dispatch(\n      addContact({\n        name: name.value,\n        number: number.value,\n      })\n    );\n    dispatch(changeFilter(''));\n  }\n\n  e.currentTarget.reset();\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { onAddContact } from 'common/helpers/onAddContact';\nimport { Box, Button, TextField } from '@mui/material';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  return (\n    <>\n      <Box\n        component=\"form\"\n        sx={{\n          padding: '20px',\n          marginBottom: '20px',\n          border: '2px solid rgba(128, 0, 128, 0.8)',\n          maxWidth: '50vw',\n          display: 'flex',\n          flexDirection: 'column',\n          justufyContent: 'center',\n          alignItems: 'center',\n          borderRadius: '20px',\n          backgroundColor: 'rgba(255, 255, 255, 0.7)',\n\n          '&:hover': {\n            backgroundColor: 'rgba(255, 255, 255, 0.95)',\n            border: '2px solid rgb(128, 0, 128, 1)',\n          },\n          '&:focus': {\n            backgroundColor: 'rgba(255, 255, 255, 0.95)',\n            border: '2px solid rgb(128, 0, 128, 1)',\n          },\n        }}\n        noValidate\n        onSubmit={e => onAddContact(e, dispatch, contacts)}\n      >\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          id=\"name\"\n          color=\"secondary\"\n          required\n          sx={{\n            width: '90%',\n            marginBottom: '20px',\n          }}\n        />\n        <TextField\n          label=\"Phone\"\n          type=\"tel\"\n          id=\"number\"\n          color=\"secondary\"\n          required\n          sx={{\n            width: '90%',\n            marginBottom: '20px',\n          }}\n        />\n        <Button\n          type=\"submit\"\n          color=\"secondary\"\n          sx={{\n            fontWeight: 600,\n            '&:hover': {\n              border: '1px solid rgba(128, 0, 128, 0.8)',\n            },\n          }}\n        >\n          Add Contact\n        </Button>\n      </Box>\n    </>\n  );\n};\n","import styled from '@emotion/styled';\nexport const FilterLabel = styled.label`\n  font-size: 24px;\n  margin-bottom: 20px;\n`;\n","import { selectContacts } from 'redux/contacts/selectors';\n\nexport const selectFilterValue = state => state.filter.value;\n\nexport const selectFilteredList = state => {\n  const filteredValue = selectFilterValue(state);\n  const contacts = selectContacts(state);\n  return filteredValue\n    ? contacts.filter(contact => {\n        return contact.name.toLowerCase().includes(filteredValue.toLowerCase());\n      })\n    : contacts;\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FilterLabel } from 'components/Filter/Filter.styled';\nimport { selectFilterValue } from 'redux/filter/selectors';\nimport { onChange } from 'common/helpers';\nimport { TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilterValue);\n\n  return (\n    <>\n      <FilterLabel htmlFor=\"find\">Find contacts by name</FilterLabel>\n      <TextField\n        hiddenLabel\n        id=\"filled-hidden-label-small\"\n        variant=\"filled\"\n        size=\"small\"\n        name=\"find\"\n        color=\"secondary\"\n        value={filterValue}\n        onChange={e => onChange(e, dispatch)}\n        onBlur={() => onChange('', dispatch)}\n        sx={{\n          backgroundColor: 'rgba(128,0, 128, 0.4)',\n          '&:hover': {\n            backgroundColor: 'rgba(128,0, 128, 0.6)',\n          },\n          '&:focus': {\n            backgroundColor: 'rgba(128,0, 128, 0.6)',\n          },\n        }}\n      />\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ContactWrap = styled.section`\n  margin: 0 auto;\n  max-width: 640px;\n  padding: 20px;\n  height: 100%;\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ContactListWrap = styled.div`\n  margin: 0 auto;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport listItemTextClasses, { getListItemTextUtilityClass } from './listItemTextClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})(({\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4\n}, ownerState.primary && ownerState.secondary && {\n  marginTop: 6,\n  marginBottom: 6\n}, ownerState.inset && {\n  paddingLeft: 56\n}));\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n      children,\n      className,\n      disableTypography = false,\n      inset = false,\n      primary: primaryProp,\n      primaryTypographyProps,\n      secondary: secondaryProp,\n      secondaryTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = _extends({}, props, {\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps != null && primaryTypographyProps.variant ? undefined : 'span',\n      display: \"block\"\n    }, primaryTypographyProps, {\n      children: primary\n    }));\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"text.secondary\",\n      display: \"block\"\n    }, secondaryTypographyProps, {\n      children: secondary\n    }));\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [primary, secondary]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getListItemIconUtilityClass } from './listItemIconClasses';\nimport ListContext from '../List/ListContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex'\n}, ownerState.alignItems === 'flex-start' && {\n  marginTop: 8\n}));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const ownerState = _extends({}, props, {\n    alignItems: context.alignItems\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","import styled from '@emotion/styled';\nimport { ListItemIcon } from '@mui/material';\n\nexport const StyledListItemText = styled.div`\n  display: flex;\n  padding: 5px 10px;\n  gap: 10px;\n  border: 1px solid rgba(128, 0, 128, 0.8);\n  justify-content: center;\n  align-items: center;\n  border-radius: 20px;\n  background-color: rgba(255, 255, 255, 0.7);\n`;\n\nexport const StyledListItemIcon = styled(ListItemIcon)`\n  padding: 0;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/contacts/operations';\nimport ListItemText from '@mui/material/ListItemText';\nimport { IconButton } from '@mui/material';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport { StyledListItemText } from './ContactItem.styled';\n\nexport const ContactItem = ({ item: { name, number, id } }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ListItemText>\n      <StyledListItemText>\n        <>\n          <p>\n            Name: <br /> {name}\n          </p>\n          <p>\n            Phone:\n            <br /> {number}\n          </p>\n        </>\n        <IconButton\n          aria-label=\"delete\"\n          onClick={({ currentTarget: { id } }) => dispatch(deleteContact(id))}\n          id={id}\n          color=\"secondary\"\n          sx={{\n            marginLeft: 'auto',\n          }}\n        >\n          <DeleteForeverIcon />\n        </IconButton>\n      </StyledListItemText>\n    </ListItemText>\n  );\n};\n\nContactItem.propTypes = {\n  item: PropTypes.exact({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const NotificationText = styled.div`\n  font-size: 24px;\n  text-align: center;\n  font-weight: 600;\n  margin-top: 20px;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { selectFilteredList } from 'redux/filter/selectors';\nimport { NotificationText } from './ContactList.styled';\nimport { List } from '@mui/material';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredList);\n\n  return (\n    <>\n      {filteredContacts.length ? (\n        <List>\n          {filteredContacts.map(item => {\n            return <ContactItem item={item} key={item.id} />;\n          })}\n        </List>\n      ) : (\n        <NotificationText>No matches</NotificationText>\n      )}\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\n\nimport { Filter } from 'components/Filter/Filter';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIslogIn } from 'redux/auth/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { ContactListWrap, ContactWrap } from './Contacts.styled';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoginIn = useSelector(selectIslogIn);\n\n  useEffect(() => {\n    isLoginIn && dispatch(fetchContacts());\n    toast.success('Welcome!');\n  }, [dispatch, isLoginIn]);\n  return (\n    <>\n      <ContactWrap>\n        <ContactForm />\n        <ContactListWrap>\n          {contacts.length > 0 ? (\n            <>\n              <Filter />\n              <ContactList />\n            </>\n          ) : (\n            <p>No contacts</p>\n          )}\n        </ContactListWrap>\n      </ContactWrap>\n      <ToastContainer\n        autoClose={500}\n        draggablePercent={60}\n        style={{\n          width: 200,\n          fontSize: 14,\n          fontWeight: 600,\n        }}\n      />\n    </>\n  );\n};\n\nexport default Contacts;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12 1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'DeleteForever');\nexports.default = _default;"],"names":["handleEmailChange","setEmail","target","value","handleNameChange","setName","handlePasswordChange","setPassword","handleCancel","arrayOfSetFoos","map","foo","onChange","e","dispatch","changeFilter","onAddContact","contacts","preventDefault","currentTarget","name","number","find","contact","toLowerCase","toast","length","lenght","addContact","reset","ContactForm","useDispatch","useSelector","selectContacts","Box","component","sx","padding","marginBottom","border","maxWidth","display","flexDirection","justufyContent","alignItems","borderRadius","backgroundColor","noValidate","onSubmit","TextField","label","type","id","color","required","width","Button","fontWeight","FilterLabel","styled","selectFilterValue","state","filter","selectFilteredList","filteredValue","includes","Filter","filterValue","htmlFor","hiddenLabel","variant","size","onBlur","ContactWrap","ContactListWrap","_excluded","ListItemTextRoot","slot","overridesResolver","props","styles","ownerState","listItemTextClasses","primary","secondary","root","inset","multiline","dense","_extends","flex","minWidth","marginTop","paddingLeft","React","inProps","ref","useThemeProps","children","className","disableTypography","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","other","_objectWithoutPropertiesLoose","ListContext","classes","slots","composeClasses","getListItemTextUtilityClass","useUtilityClasses","Typography","_jsx","undefined","_jsxs","clsx","ListItemIconRoot","alignItemsFlexStart","theme","vars","palette","action","active","flexShrink","context","getListItemIconUtilityClass","StyledListItemText","ContactItem","ListItemIcon","item","IconButton","onClick","deleteContact","marginLeft","DeleteForever","NotificationText","ContactList","filteredContacts","List","isLoginIn","selectIslogIn","useEffect","fetchContacts","autoClose","draggablePercent","style","fontSize","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}