{"version":3,"file":"static/js/724.ae3fe62b.chunk.js","mappings":"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","sources":["common/helpers/handleEmailChange.js","common/helpers/handleNameChange.js","common/helpers/handlePasswordChange.js","common/helpers/handleCancel.js","common/helpers/handleMouseDownPassword.js","common/helpers/handleClickShowPassword.js","common/helpers/onChange.js","common/helpers/onAddContact.js","pages/Authorization/Authorization.js"],"sourcesContent":["export const handleEmailChange = ({ target: { value } }, setEmail) => {\n  setEmail(value);\n};\n","export const handleNameChange = ({ target: { value } }, setName) => {\n  setName(value);\n};\n","export const handlePasswordChange = ({ target: { value } }, setPassword) => {\n  setPassword(value);\n};\n","export const handleCancel = arrayOfSetFoos => {\n  arrayOfSetFoos.map(foo => foo(''));\n};\n","export const handleMouseDownPassword = ({ preventDefault }) => preventDefault();\n","export const handleClickShowPassword = setShowPassword =>\n  setShowPassword(show => !show);\n","import { changeFilter } from 'redux/filter/filterSlice';\n\nexport const onChange = (e, dispatch) => {\n  if (e === '') {\n    dispatch(changeFilter(''));\n    return;\n  }\n  dispatch(changeFilter(e.target.value));\n};\n","import { toast } from 'react-toastify';\nimport { addContact } from 'redux/contacts/operations';\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nexport const onAddContact = (e, dispatch, contacts) => {\n  e.preventDefault();\n  const { name, number } = e.currentTarget;\n  const isContactExist = contacts.find(\n    contact => contact.name.toLowerCase() === name.value.toLowerCase()\n  );\n  if (isContactExist) {\n    toast.warning(`${name.value} is already in contacts.`);\n  } else {\n    dispatch(\n      addContact({\n        name: name.value,\n        number: number.value,\n      })\n    );\n    dispatch(changeFilter(''));\n  }\n\n  e.currentTarget.reset();\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logInUser } from 'redux/auth/operations';\nimport { AiOutlineHome } from 'react-icons/ai';\nimport {\n  Box,\n  Button,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  TextField,\n} from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SendIcon from '@mui/icons-material/Send';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  FormBtnsSet,\n  StyledAuthWrap,\n  SwitchFormBtn,\n  BackHomeBtn,\n} from 'common/styles';\nimport {\n  handleCancel,\n  handleEmailChange,\n  handleMouseDownPassword,\n  handlePasswordChange,\n} from 'common/helpers';\n\nconst Authorization = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(logInUser({ email, password }));\n    handleCancel([setEmail, setPassword]);\n  };\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  return (\n    <StyledAuthWrap>\n      <BackHomeBtn to=\"/\">\n        <AiOutlineHome />\n      </BackHomeBtn>\n      <h3>Authorization</h3>\n      <Box\n        component=\"form\"\n        sx={{\n          padding: '20px',\n          marginBottom: '20px',\n          border: '2px solid rgba(25, 118, 210, 0.5)',\n          maxWidth: '50vw',\n          display: 'flex',\n          flexDirection: 'column',\n          justufyContent: 'center',\n          alignItems: 'center',\n          borderRadius: '20px',\n          backgroundColor: 'rgba(255, 255, 255, 0.7)',\n\n          '&:hover': {\n            backgroundColor: 'rgba(255, 255, 255, 0.95)',\n            border: '2px solid #1976d2',\n          },\n          '&:focus': {\n            backgroundColor: 'rgba(255, 255, 255, 0.95)',\n            border: '2px solid #1976d2',\n          },\n        }}\n        noValidate\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          label=\"Email\"\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={e => handleEmailChange(e, setEmail)}\n          required\n          sx={{\n            width: '90%',\n            marginBottom: '20px',\n          }}\n        />\n        <FormControl\n          sx={{\n            width: '90%',\n            marginBottom: '40px',\n          }}\n          variant=\"outlined\"\n        >\n          <InputLabel htmlFor=\"outlined-adornment-password\">\n            Password\n          </InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-password\"\n            type={showPassword ? 'text' : 'password'}\n            value={password}\n            onChange={e => handlePasswordChange(e, setPassword)}\n            required\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"toggle password visibility\"\n                  onClick={handleClickShowPassword}\n                  onMouseDown={handleMouseDownPassword}\n                  edge=\"end\"\n                >\n                  {showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            }\n            label=\"Password\"\n          />\n        </FormControl>\n        <FormBtnsSet>\n          <Button\n            sx={{\n              minWidth: 117,\n            }}\n            variant=\"contained\"\n            type=\"submit\"\n            endIcon={<SendIcon />}\n          >\n            OK\n          </Button>\n          <Button\n            sx={{\n              minWidth: 117,\n            }}\n            variant=\"outlined\"\n            onClick={() => handleCancel([setEmail, setPassword])}\n            startIcon={<DeleteIcon />}\n          >\n            Cancel\n          </Button>\n        </FormBtnsSet>\n      </Box>\n\n      <SwitchFormBtn to=\"/register\">Go to Registration</SwitchFormBtn>\n      <ToastContainer\n        autoClose={300}\n        draggablePercent={60}\n        style={{\n          width: 200,\n          fontSize: 14,\n          fontWeight: 600,\n        }}\n      />\n    </StyledAuthWrap>\n  );\n};\n\nexport default Authorization;\n"],"names":["handleEmailChange","setEmail","target","value","handleNameChange","setName","handlePasswordChange","setPassword","handleCancel","arrayOfSetFoos","map","foo","handleMouseDownPassword","preventDefault","handleClickShowPassword","setShowPassword","show","onChange","e","dispatch","changeFilter","onAddContact","contacts","currentTarget","name","number","find","contact","toLowerCase","toast","addContact","reset","useState","email","password","showPassword","useDispatch","to","component","sx","padding","marginBottom","border","maxWidth","display","flexDirection","justufyContent","alignItems","borderRadius","backgroundColor","noValidate","onSubmit","logInUser","label","type","id","required","width","variant","htmlFor","endAdornment","position","onClick","onMouseDown","edge","minWidth","endIcon","startIcon","autoClose","draggablePercent","style","fontSize","fontWeight"],"sourceRoot":""}