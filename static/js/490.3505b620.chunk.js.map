{"version":3,"file":"static/js/490.3505b620.chunk.js","mappings":"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","sources":["common/helpers/handleEmailChange.js","common/helpers/handleNameChange.js","common/helpers/handlePasswordChange.js","common/helpers/handleCancel.js","common/helpers/onChange.js","common/helpers/onAddContact.js","pages/Registration/Registration.js"],"sourcesContent":["export const handleEmailChange = ({ target: { value } }, setEmail) => {\n  setEmail(value);\n};\n","export const handleNameChange = ({ target: { value } }, setName) => {\n  setName(value);\n};\n","export const handlePasswordChange = ({ target: { value } }, setPassword) => {\n  setPassword(value);\n};\n","export const handleCancel = arrayOfSetFoos => {\n  arrayOfSetFoos.map(foo => foo(''));\n};\n","import { changeFilter } from 'redux/filter/filterSlice';\n\nexport const onChange = (e, dispatch) => {\n  if (e === '') {\n    dispatch(changeFilter(''));\n    return;\n  }\n  dispatch(changeFilter(e.target.value));\n};\n","import { toast } from 'react-toastify';\nimport { addContact } from 'redux/contacts/operations';\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nexport const onAddContact = (e, dispatch, contacts) => {\n  e.preventDefault();\n  const { name, number } = e.currentTarget;\n  const isContactExist = contacts.find(\n    contact => contact.name.toLowerCase() === name.value.toLowerCase()\n  );\n  if (isContactExist) {\n    toast.warning(`${name.value} is already in contacts.`);\n  } else if (name.value.length > 12 || number.value.lenght > 12) {\n    toast.warning('Name and Phone number should be shorter than 12 symbols');\n  } else {\n    dispatch(\n      addContact({\n        name: name.value,\n        number: number.value,\n      })\n    );\n    dispatch(changeFilter(''));\n  }\n\n  e.currentTarget.reset();\n};\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom/dist';\nimport { registrationUser } from 'redux/auth/operations';\nimport { selectIslogIn } from 'redux/auth/selectors';\nimport { AiOutlineHome } from 'react-icons/ai';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SendIcon from '@mui/icons-material/Send';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  FormBtnsSet,\n  StyledAuthWrap,\n  SwitchFormBtn,\n  BackHomeBtn,\n} from 'common/styles';\nimport {\n  handleCancel,\n  handleEmailChange,\n  handleNameChange,\n  handlePasswordChange,\n} from 'common/helpers';\nimport {\n  Box,\n  Button,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  TextField,\n} from '@mui/material';\n\nconst Registration = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoginIn = useSelector(selectIslogIn);\n\n  useEffect(() => {\n    isLoginIn && navigate('/contacts');\n  }, [isLoginIn, navigate]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(registrationUser({ name, email, password }));\n    handleCancel([setEmail, setName, setPassword]);\n  };\n\n  return (\n    <StyledAuthWrap>\n      <BackHomeBtn to=\"/\">\n        <AiOutlineHome />\n      </BackHomeBtn>\n      <h3>Registration</h3>\n      <Box\n        component=\"form\"\n        sx={{\n          padding: '20px',\n          marginBottom: '20px',\n          border: '2px solid rgba(25, 118, 210, 0.5)',\n          maxWidth: '50vw',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          borderRadius: '20px',\n          backgroundColor: 'rgba(255, 255, 255, 0.7)',\n\n          '&:hover': {\n            backgroundColor: 'rgba(255, 255, 255, 0.95)',\n            border: '2px solid #1976d2',\n          },\n          '&:focus': {\n            backgroundColor: 'rgba(255, 255, 255, 0.95)',\n            border: '2px solid #1976d2',\n          },\n        }}\n        noValidate\n        onSubmit={handleSubmit}\n      >\n        <TextField\n          label=\"Name\"\n          type=\"text\"\n          id=\"name\"\n          value={name}\n          onChange={e => handleNameChange(e, setName)}\n          required\n          sx={{\n            width: '90%',\n            marginBottom: '20px',\n          }}\n        />\n        <TextField\n          label=\"Email\"\n          type=\"email\"\n          id=\"email\"\n          value={email}\n          onChange={e => handleEmailChange(e, setEmail)}\n          required\n          sx={{\n            width: '90%',\n            marginBottom: '20px',\n          }}\n        />\n        <FormControl\n          sx={{\n            width: '90%',\n            marginBottom: '40px',\n          }}\n          variant=\"outlined\"\n        >\n          <InputLabel htmlFor=\"outlined-adornment-password\">\n            Password\n          </InputLabel>\n          <OutlinedInput\n            id=\"outlined-adornment-password\"\n            type=\"password\"\n            value={password}\n            onChange={e => handlePasswordChange(e, setPassword)}\n            required\n            label=\"Password\"\n          />\n        </FormControl>\n        <FormBtnsSet>\n          <Button\n            sx={{\n              minWidth: 117,\n            }}\n            variant=\"contained\"\n            type=\"submit\"\n            endIcon={<SendIcon />}\n          >\n            OK\n          </Button>\n          <Button\n            sx={{\n              minWidth: 117,\n            }}\n            variant=\"outlined\"\n            onClick={() => handleCancel([setEmail, setName, setPassword])}\n            startIcon={<DeleteIcon />}\n          >\n            Cancel\n          </Button>\n        </FormBtnsSet>\n      </Box>\n\n      <SwitchFormBtn to=\"/login\">Go to Authorization</SwitchFormBtn>\n    </StyledAuthWrap>\n  );\n};\n\nexport default Registration;\n"],"names":["handleEmailChange","setEmail","target","value","handleNameChange","setName","handlePasswordChange","setPassword","handleCancel","arrayOfSetFoos","map","foo","onChange","e","dispatch","changeFilter","onAddContact","contacts","preventDefault","currentTarget","name","number","find","contact","toLowerCase","toast","length","lenght","addContact","reset","useState","email","password","useDispatch","navigate","useNavigate","isLoginIn","useSelector","selectIslogIn","useEffect","to","component","sx","padding","marginBottom","border","maxWidth","display","flexDirection","justifyContent","alignItems","borderRadius","backgroundColor","noValidate","onSubmit","registrationUser","label","type","id","required","width","variant","htmlFor","minWidth","endIcon","onClick","startIcon"],"sourceRoot":""}